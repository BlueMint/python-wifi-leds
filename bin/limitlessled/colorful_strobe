#!/usr/bin/env python

import ast
import time

from optparse import OptionParser, OptionGroup

import wifileds

if __name__=="__main__":
    parser = OptionParser()
    parser.add_option('-a', '--address', default='192.168.1.100', help='wifi block ip address [default: %default]')
    parser.add_option('-p', '--port', type='int', default=50000, help='wifi block port address [default: %default]')
    parser.add_option('-b', '--bulbs', choices=['rgb','rgbw','all'], default='all', help='choose the lights to run this effect [default: %default]')


    group = OptionGroup(parser, 'Effect options:')
    group.add_option('--duration', type='float', default=86400, help='length of time the effect will last [default: %default]')
    group.add_option('--on-duration', type='float', default=0.3, help='length of time the lights remain in the on position [default: %default]')
    group.add_option('--off-duration', type='float', default=0.01, help='length of time the lights remain in the off position [default: %default]')
    group.add_option('--colors', default=None, help='list of possible colors to choose from. `None`: Random selection of colors. [default: %default]')
    parser.add_option_group(group)

    (options, args) = parser.parse_args()

    led_connection = wifileds.limitlessled.connect(options.address, options.port)

    bulbs = options.bulbs

    options = ast.literal_eval(str(options))
    options['colors'] = options['colors'].split(',') if options['colors'] else None

    print  options['colors'] 

    del options['address']
    del options['port']
    del options['bulbs']





    if bulbs == 'rgb':
    	led_connection.rgb.all_on()
    	led_connection.rgb.effect('colorful_strobe', effect_options=options)
    elif bulbs == 'rgbw':
        led_connection.rgbw.all_on()
        led_connection.rgbw.effect('colorful_strobe', effect_options=options)
    elif bulbs == 'all':
        led_connection.rgb.all_on()
        led_connection.rgb.effect('colorful_strobe', effect_options=options)
        led_connection.rgbw.all_on()
        led_connection.rgbw.effect('colorful_strobe', effect_options=options)


